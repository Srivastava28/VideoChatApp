{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\Coding\\\\React\\\\WebRTC Video Chat\\\\client\\\\src\\\\components\\\\Videoplayer.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Paper from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from \"@mui/styles\";\nimport { SocketContext } from \"../SocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  video: {\n    width: '600px',\n    \"@media (max-width: 1440px)\": {\n      video: {\n        width: '300px'\n      }\n    }\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    \"@media (max-width: 1440px)\": {\n      gridContainer: {\n        width: '90%'\n      }\n    }\n  },\n  paper: {\n    padding: '10px',\n    border: '2px solid black',\n    margin: '10px',\n    background: \"white\"\n  }\n}));\nconst Videoplayer = () => {\n  _s();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"paper\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          muted: true,\n          ref: null,\n          autoPlay: true,\n          className: classes.video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"paper\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          muted: true,\n          ref: null,\n          autoPlay: true,\n          className: classes.video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Videoplayer, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Videoplayer;\nexport default Videoplayer;\nvar _c;\n$RefreshReg$(_c, \"Videoplayer\");","map":{"version":3,"names":["React","Paper","Grid","Typography","makeStyles","SocketContext","jsxDEV","_jsxDEV","useStyles","theme","video","width","gridContainer","justifyContent","paper","padding","border","margin","background","Videoplayer","_s","classes","container","className","children","item","xs","md","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","playsInline","muted","ref","autoPlay","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/Coding/React/WebRTC Video Chat/client/src/components/Videoplayer.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\nimport Paper from \"@mui/material\";\r\nimport { Grid } from \"@mui/material\";\r\nimport Typography from '@mui/material/Typography';\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      width: '600px',\r\n\r\n\r\n      \"@media (max-width: 1440px)\": {\r\n        video: {\r\n          width: '300px'\r\n          \r\n         }\r\n    }\r\n\r\n \r\n    },\r\n\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n\r\n      \"@media (max-width: 1440px)\": {\r\n        gridContainer: {\r\n          width: '90%'\r\n          \r\n         }\r\n    }\r\n\r\n\r\n      \r\n    },\r\n    paper: {\r\n      padding: '10px',\r\n      border: '2px solid black',\r\n      margin: '10px',\r\n      background: \"white\",\r\n    },\r\n  }));\r\n\r\n\r\nconst Videoplayer = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Grid container className={classes.gridContainer}>\r\n            {/* Our own Video */}\r\n            <paper className={classes.paper}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h5\" gutterBottom >Name </Typography>\r\n                    <video playsInline muted ref={null} autoPlay className={classes.video} />\r\n                </Grid>\r\n            </paper>\r\n            {/* User's video  */}\r\n            <paper className={classes.paper}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h5\" gutterBottom >Name </Typography>\r\n                    <video playsInline muted ref={null} autoPlay className={classes.video} />\r\n                </Grid>\r\n            </paper>\r\n        </Grid>\r\n    );\r\n}\r\nexport default Videoplayer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}